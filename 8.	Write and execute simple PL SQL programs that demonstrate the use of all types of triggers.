âœ… Types of Triggers in PL/SQL

PL/SQL supports the following types of triggers:

Before Insert Trigger

After Insert Trigger

Before Update Trigger

After Update Trigger

Before Delete Trigger

After Delete Trigger

Instead Of Trigger (for Views)

âœ… Sample Tables for Demonstration
-- Main table
CREATE TABLE employees (
    emp_id NUMBER PRIMARY KEY,
    emp_name VARCHAR2(50),
    salary NUMBER
);

-- Log table
CREATE TABLE emp_log (
    log_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    emp_id NUMBER,
    action VARCHAR2(20),
    action_date DATE
);

âœ… 1. BEFORE INSERT Trigger
CREATE OR REPLACE TRIGGER trg_before_insert
BEFORE INSERT ON employees
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('Before Insert Trigger Fired!');
    IF :NEW.salary < 10000 THEN
        :NEW.salary := 10000; -- Minimum salary
    END IF;
END;
/


Test

INSERT INTO employees VALUES (1, 'Rohan', 8000);

âœ… 2. AFTER INSERT Trigger
CREATE OR REPLACE TRIGGER trg_after_insert
AFTER INSERT ON employees
FOR EACH ROW
BEGIN
    INSERT INTO emp_log (emp_id, action, action_date)
    VALUES (:NEW.emp_id, 'INSERT', SYSDATE);
END;
/


Test

INSERT INTO employees VALUES (2, 'Neha', 15000);

âœ… 3. BEFORE UPDATE Trigger
CREATE OR REPLACE TRIGGER trg_before_update
BEFORE UPDATE ON employees
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('Before Update Trigger Fired!');
END;
/


Test

UPDATE employees SET salary = salary + 5000 WHERE emp_id = 1;

âœ… 4. AFTER UPDATE Trigger
CREATE OR REPLACE TRIGGER trg_after_update
AFTER UPDATE ON employees
FOR EACH ROW
BEGIN
    INSERT INTO emp_log (emp_id, action, action_date)
    VALUES (:OLD.emp_id, 'UPDATE', SYSDATE);
END;
/

âœ… 5. BEFORE DELETE Trigger
CREATE OR REPLACE TRIGGER trg_before_delete
BEFORE DELETE ON employees
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('Before Delete Trigger Fired!');
END;
/

âœ… 6. AFTER DELETE Trigger
CREATE OR REPLACE TRIGGER trg_after_delete
AFTER DELETE ON employees
FOR EACH ROW
BEGIN
    INSERT INTO emp_log (emp_id, action, action_date)
    VALUES (:OLD.emp_id, 'DELETE', SYSDATE);
END;
/


Test

DELETE FROM employees WHERE emp_id = 2;

âœ… 7. INSTEAD OF Trigger (For Views)
Create a View
CREATE VIEW emp_view AS
SELECT emp_id, emp_name FROM employees;

Instead Of Trigger
CREATE OR REPLACE TRIGGER trg_instead_of
INSTEAD OF INSERT ON emp_view
FOR EACH ROW
BEGIN
    INSERT INTO employees(emp_id, emp_name, salary)
    VALUES (:NEW.emp_id, :NEW.emp_name, 10000);
END;
/


Test

INSERT INTO emp_view VALUES (3, 'Priya');

âœ… Display Logs
SELECT * FROM emp_log;

ðŸŽ¯ Output Explanation

Ensures salary minimum

Logs insert/update/delete actions

Allows inserts into a view
